{"version":3,"sources":["components/movieCard/movieCard.module.css","containers/details/details.module.css","types.js","components/movieCard/index.js","containers/home/index.js","actions/index.js","containers/details/index.js","App.js","reportWebVitals.js","reducers/fetchMovieDetailsReducer.js","reducers/fetchMovieReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["module","exports","FETCH_MOVIE","FETCH_MOVIE_SUCCESS","FETCH_MOVIE_FAIL","FETCH_MOVIE_DETAILS","FETCH_MOVIE_DETAILS_SUCCESS","FETCH_MOVIE_DETAILS_FAIL","MovieCard","className","classes","card_holder","to","pathname","this","props","id","src","poster","alt","img_holder","details_holder","title","year","type","Component","Home","state","movieList","movieData","Object","keys","length","setState","data","Search","prevProps","isLoading","inputVal","_inputEle","value","onFetchMovie","placeholder","ref","a","onClick","movieSubmit","map","list","Title","Year","Poster","Type","imdbID","mapDispatchtoProps","dispatch","payload","axios","get","then","res","console","log","status","Response","alert","Error","catch","error","response","connect","movie","Details","urlSplit","window","location","href","split","movieID","onFetchMovieDetails","movieDetailsData","big_container","info_container","words_container","Actors","Plot","Director","Genre","Runtime","mapDispatchToProps","movieDetails","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fetchMovieDetailsReducer","action","undefined","fetchMovieReducer","combineReducers","persistConfig","key","version","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","classname","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.b9d7c2dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_holder\":\"movieCard_card_holder__1Nryt\",\"img_holder\":\"movieCard_img_holder__2An23\",\"details_holder\":\"movieCard_details_holder__13czx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"big_container\":\"details_big_container__QauCP\",\"info_container\":\"details_info_container__1PicZ\",\"words_container\":\"details_words_container__2owz2\"};","export const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\r\nexport const FETCH_MOVIE_FAIL = 'FETCH_MOVIE_FAIL';\r\n\r\nexport const FETCH_MOVIE_DETAILS = 'FETCH_MOVIE_DETAILS';\r\nexport const FETCH_MOVIE_DETAILS_SUCCESS = 'FETCH_MOVIE_DETAILS_SUCCESS';\r\nexport const FETCH_MOVIE_DETAILS_FAIL = 'FETCH_MOVIE_DETAILS_FAIL';\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport classes from './movieCard.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n    render() {\r\n        return (\r\n            <Link className = {classes.card_holder} to={{pathname: `/details/${this.props.id}`}}>\r\n                <img src={this.props.poster} alt=\"\" className = {classes.img_holder}/>\r\n                <div className = {classes.details_holder}>\r\n                    <h3>{this.props.title}</h3>\r\n                    <div>\r\n                        <p>Year: {this.props.year}</p>\r\n                        <p>Type: {this.props.type}</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMovie } from '../../actions';\r\nimport MovieCard from '../../components/movieCard';\r\nimport classes from './home.module.css';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            movieList : [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {movieData} = this.props;\r\n\r\n        if (Object.keys(movieData).length > 0) {\r\n            this.setState({movieList: movieData.data.Search});\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {movieData} = this.props;\r\n\r\n        if (prevProps.movieData.isLoading && !movieData.isLoading) {\r\n            this.setState({movieList: movieData.data.Search});\r\n        }\r\n    }\r\n\r\n    movieSubmit() {\r\n        const inputVal = this._inputEle.value;\r\n        if (inputVal !== '') {\r\n            this.props.onFetchMovie(inputVal);\r\n            this._inputEle.value = '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <input type=\"text\" placeholder = 'Movie Name' ref={(a) => (this._inputEle = a)}/>\r\n                    <button onClick = {() => this.movieSubmit()}>Search</button>\r\n                </header>\r\n\r\n                <div>\r\n                    {this.state.movieList.map(list => \r\n                    <MovieCard \r\n                    title = {list.Title}\r\n                    year = {list.Year}\r\n                    poster = {list.Poster}\r\n                    type = {list.Type}\r\n                    id = {list.imdbID}\r\n                    />)}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movieData: state.movie,\r\n});\r\n\r\nconst mapDispatchtoProps = {\r\n    onFetchMovie: fetchMovie,\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Home);\r\n","import * as type from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchMovie = (data) => (dispatch) => {\r\n    dispatch ({\r\n        type: type.FETCH_MOVIE,\r\n        payload: data,\r\n    });\r\n\r\n    try {\r\n        axios.get(`http://www.omdbapi.com/?apikey=85872d3a&s=${data}&page=1`)\r\n        .then((res) => {\r\n            console.log('res...',res);\r\n            if (res.status === 200 && res.data.Response === 'True') {\r\n                dispatch ({\r\n                    type: type.FETCH_MOVIE_SUCCESS,\r\n                    payload: res.data,\r\n                })\r\n            } else {\r\n                alert(res.data.Error);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log('error 1',error.response.data.Error);\r\n            dispatch({\r\n                type: type.FETCH_MOVIE_FAIL,\r\n                error: error.response.data.Error,\r\n            })\r\n        });\r\n\r\n\r\n    } catch (error) {\r\n        console.log('error 2', error.response.data.Error);\r\n        dispatch({\r\n            type: type.FETCH_MOVIE_FAIL,\r\n            error: error.response.data.Error,\r\n        })\r\n    }\r\n};\r\n\r\nexport const fetchMovieDetails = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: type.FETCH_MOVIE_DETAILS,\r\n    })\r\n\r\n    try {\r\n        axios.get(`http://www.omdbapi.com/?apikey=85872d3a&i=${data}`)\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n                dispatch ({\r\n                    type: type.FETCH_MOVIE_DETAILS_SUCCESS,\r\n                    payload: res.data,\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log('error',error);\r\n            dispatch({\r\n                type: type.FETCH_MOVIE_DETAILS_FAIL,\r\n                error: error.response.data.Error,\r\n            })\r\n        })\r\n        \r\n    } catch (error) {\r\n        console.log('error', error);\r\n        dispatch({\r\n            type: type.FETCH_MOVIE_DETAILS_FAIL,\r\n            error: error.response.data.Error,\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {fetchMovieDetails} from '../../actions';\r\nimport classes from './details.module.css';\r\n\r\nexport class Details extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const urlParam = window.location.href;\r\n        const urlSplit = urlParam.split('/');\r\n        const id = urlSplit[urlSplit.length-1];\r\n\r\n        this.state = {\r\n            movieID : id,\r\n            data: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchMovieDetails(this.state.movieID);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {movieDetailsData} = this.props;\r\n\r\n        if (prevProps.movieDetailsData.isLoading && !movieDetailsData.isLoading) {\r\n            this.setState({data: movieDetailsData.data});\r\n        }\r\n\r\n        console.log(movieDetailsData.data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = {classes.big_container}>\r\n                <h1>Details</h1>\r\n\r\n                {this.props.movieDetailsData.isLoading ?\r\n                <h4>Loading....</h4> :\r\n\r\n                <div className = {classes.info_container}>\r\n                    <img src={this.state.data.Poster} alt=\"\" />\r\n\r\n                    <div className = {classes.words_container}>\r\n                        <h3>{this.state.data.Title}</h3>\r\n                        <p><b>Actors:</b> {this.state.data.Actors}</p>\r\n                        <p><b>Plot:</b> {this.state.data.Plot}</p>\r\n                        <p><b>Director:</b> {this.state.data.Director}</p>\r\n                        <p><b>Genre:</b> {this.state.data.Genre}</p>\r\n                        <p><b>Runtime:</b> {this.state.data.Runtime}</p>\r\n                        <button><Link to='/'>Return</Link></button>\r\n                    </div>\r\n                </div>  \r\n                }\r\n\r\n                \r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movieDetailsData: state.movieDetails,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onFetchMovieDetails: fetchMovieDetails,\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Details);\r\n","import './App.css';\nimport { Route, Routes } from 'react-router';\nimport Home from './containers/home';\nimport Details from './containers/details';\n\nfunction App() {\n  return (\n      <Routes>\n          <Route path='/' exact element = {<Home/>}/>\n          <Route path='/details/:id' element = {<Details/>}/>\n      </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types';\r\n\r\nconst defaultState = () => ({\r\n    isLoading: false,\r\n    data: {},\r\n    error: null,\r\n});\r\n\r\nconst fetchMovieDetailsReducer = (state,action) => {\r\n    if (state === undefined) {\r\n        return defaultState();\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case type.FETCH_MOVIE_DETAILS:\r\n            return {\r\n                isLoading: true,\r\n                data: {},\r\n                error: null,\r\n            }\r\n\r\n        case type.FETCH_MOVIE_DETAILS_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                data: action.payload,\r\n                error: null,\r\n            }\r\n        case type.FETCH_MOVIE_DETAILS_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: {},\r\n                error: action.error,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fetchMovieDetailsReducer;","import * as type from '../types';\r\n\r\nconst defaultState = () => ({\r\n    isLoading: false,\r\n    data: {},\r\n    error: null,\r\n});\r\n\r\nconst fetchMovieReducer = (state,action) => {\r\n\r\n    if (state === undefined) {\r\n        return defaultState();\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case type.FETCH_MOVIE:\r\n            return {\r\n                isLoading: true,\r\n                data: {},\r\n                error: null,\r\n            }\r\n\r\n        case type.FETCH_MOVIE_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                data: action.payload,\r\n                error: null,\r\n            }\r\n        case type.FETCH_MOVIE_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: {},\r\n                error: action.error,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fetchMovieReducer;","import { combineReducers } from \"redux\";\r\nimport { fetchMovieDetails } from \"../actions\";\r\nimport fetchMovieDetailsReducer from \"./fetchMovieDetailsReducer\";\r\n\r\nimport fetchMovieReducer from \"./fetchMovieReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    movie: fetchMovieReducer,\r\n    movieDetails: fetchMovieDetailsReducer,\r\n})","import {configureStore} from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from '../reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n});\r\n  \r\nlet persistor = persistStore(store);\r\n\r\nexport {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {persistor, store} from './store/configureStore';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router classname = \"App\" basename = {process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}